services:
  codex:
    build: ./codex
#    ports: # use if it is necessary to expose the container to the host machine
#      - "3000:3000"
    environment:
      ARGON_PEPPER: 53580186397ea7a35849d26aef45173e
      UPLOADS_SECRET: 4d24e834a71c6d24133e0ab21a6478b7a1035b4d9d400fcbcfc3067161bf18f9b190a79b02a6afad2445bcfbcea99ced9329fc843688d70e17855952bb0df9693282f38c6252d5739b5519d2a334d4370d4e212a93a1bb46270396e903119160521b9d412e50eac4dba8c50900d1e2e0cbe296242aa61f1e31ca759eb48edfc0
      UPLOADS_IP: uploads
      UPLOADS_PORT: 3001
      POSTGRES_USER: 1BOCVOblkJ
      POSTGRES_PASSWORD: i8Raryz8ThoJk+dK2ksoga==
    develop:
      watch:
        - action: sync+restart
          path: ./codex
          target: /usr/src/app/
          ignore:
            - node_modules/
  uploads:
    build: ./uploads
#    ports: # use if it is necessary to expose the container to the host machine
#      - "3001:3001"
    environment:
      UPLOADS_SECRET: 4d24e834a71c6d24133e0ab21a6478b7a1035b4d9d400fcbcfc3067161bf18f9b190a79b02a6afad2445bcfbcea99ced9329fc843688d70e17855952bb0df9693282f38c6252d5739b5519d2a334d4370d4e212a93a1bb46270396e903119160521b9d412e50eac4dba8c50900d1e2e0cbe296242aa61f1e31ca759eb48edfc0
    develop:
      watch:
        - action: sync+restart
          path: ./uploads
          target: /usr/src/app/
          ignore:
            - node_modules/
    volumes:
      - uploads_public:/usr/src/app/public/images
  #      - caddy_data:/data
  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: 1BOCVOblkJ
      POSTGRES_PASSWORD: i8Raryz8ThoJk+dK2ksoga==
    volumes:
      - pg_data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
  # An industry standard secure server recommended by experts which we use as a reverse proxy with HTTPS
  caddy:
    image: caddy:2.10.0-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - caddy_data:/data
      - caddy_config:/config

volumes:
  pg_data:
  uploads_public:
  caddy_data:
  caddy_config:
